-- Drop existing tables if they exist

DROP TABLE IF EXISTS "DP_API_CONTENT";
DROP TABLE IF EXISTS "DP_ORGANIZATION_ASSETS";
DROP TABLE IF EXISTS "DP_API_IMAGEDATA";
DROP TABLE IF EXISTS "DP_IDENTITY_PROVIDER";
DROP TABLE IF EXISTS "DP_API_SUBSCRIPTION_POLICY";
DROP TABLE IF EXISTS "DP_SUBSCRIPTION_POLICY";
DROP TABLE IF EXISTS "DP_API_METADATA" CASCADE;
DROP TABLE IF EXISTS "DP_ORGANIZATION" CASCADE;
DROP TABLE IF EXISTS "DP_PROVIDER";
DROP TABLE IF EXISTS "DP_SDK_JOBS";
DROP TABLE IF EXISTS "DP_VIEWS" CASCADE;
DROP TABLE IF EXISTS "DP_LABELS" CASCADE;
DROP TABLE IF EXISTS "DP_VIEW_LABELS";
DROP TABLE IF EXISTS "DP_API_LABELS";
DROP TABLE IF EXISTS "DP_APPLICATION" CASCADE;
DROP TABLE IF EXISTS "DP_API_SUBSCRIPTION";
DROP TABLE IF EXISTS "session";


CREATE TABLE "DP_ORGANIZATION" (
    "ORG_ID" VARCHAR(256) NOT NULL,
    "ORG_NAME" VARCHAR(256) UNIQUE NOT NULL,
    "BUSINESS_OWNER" VARCHAR(256),
    "BUSINESS_OWNER_CONTACT" VARCHAR(256),
    "BUSINESS_OWNER_EMAIL" VARCHAR(256) ,
    "ORG_HANDLE" VARCHAR(255) UNIQUE NOT NULL,
    "ROLE_CLAIM_NAME" VARCHAR(255),
    "GROUPS_CLAIM_NAME" VARCHAR(255),
    "ORGANIZATION_CLAIM_NAME" VARCHAR(255),
    "ORGANIZATION_IDENTIFIER" VARCHAR(255) UNIQUE NOT NULL,
    "ADMIN_ROLE" VARCHAR(255),
    "SUBSCRIBER_ROLE" VARCHAR(255),
    "SUPER_ADMIN_ROLE" VARCHAR(255),
    "ORG_CONFIG" JSON NOT NULL,
    PRIMARY KEY("ORG_ID")
);

CREATE TABLE "DP_PROVIDER" (
    "ORG_ID" VARCHAR(256) NOT NULL,
    "NAME" VARCHAR(256) NOT NULL,
    "PROPERTY" VARCHAR(256) NOT NULL,
    "VALUE" VARCHAR(256) NOT NULL,
    UNIQUE ("NAME", "PROPERTY", "ORG_ID"),
    PRIMARY KEY("ORG_ID", "NAME", "PROPERTY"),
    FOREIGN KEY("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE
);

CREATE TABLE "DP_VIEWS" (
    "VIEW_ID" VARCHAR(256) NOT NULL,
    "ORG_ID" VARCHAR(256) NOT NULL,
    "NAME" VARCHAR(256) NOT NULL,
    "DISPLAY_NAME" VARCHAR(256) NOT NULL,
    UNIQUE ("NAME", "DISPLAY_NAME", "ORG_ID"),
    PRIMARY KEY("VIEW_ID"),
    FOREIGN KEY("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE
);

CREATE TABLE "DP_LABELS" (
    "LABEL_ID" VARCHAR(256) NOT NULL,
    "ORG_ID" VARCHAR(256) NOT NULL,
    "NAME" VARCHAR(256) NOT NULL,
    "DISPLAY_NAME" VARCHAR(256) NOT NULL,
    UNIQUE ("NAME", "DISPLAY_NAME", "ORG_ID"),
    PRIMARY KEY("LABEL_ID"),
    FOREIGN KEY("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE
);

CREATE TABLE "DP_VIEW_LABELS" (
    "ID" VARCHAR(256) NOT NULL,
    "LABEL_ID" VARCHAR(256) NOT NULL,
    "VIEW_ID" VARCHAR(256) NOT NULL,
    "ORG_ID" VARCHAR(256) NOT NULL,
    UNIQUE ("LABEL_ID", "VIEW_ID", "ORG_ID"),
    FOREIGN KEY("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE,
    FOREIGN KEY("LABEL_ID") REFERENCES "DP_LABELS"("LABEL_ID") ON DELETE CASCADE,
    FOREIGN KEY("VIEW_ID") REFERENCES "DP_VIEWS"("VIEW_ID") ON DELETE CASCADE,
    PRIMARY KEY("ID")
);

CREATE TABLE "DP_ORGANIZATION_ASSETS" (
	"ASSET_ID" VARCHAR(256) NOT NULL,
	"FILE_NAME" VARCHAR(256) NOT NULL,
	"FILE_CONTENT" BYTEA NOT NULL,
	"FILE_TYPE" VARCHAR(256) NOT NULL,
	"FILE_PATH" VARCHAR(1000) NOT NULL,
	"ORG_ID" VARCHAR(256) NOT NULL,
    "VIEW_ID" VARCHAR(256),
	FOREIGN KEY("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE,
    FOREIGN KEY("VIEW_ID") REFERENCES "DP_VIEWS"("VIEW_ID") ON DELETE CASCADE,
	UNIQUE ("FILE_NAME", "FILE_TYPE", "FILE_PATH", "ORG_ID", "VIEW_ID"),
	PRIMARY KEY("ASSET_ID")
);

CREATE TABLE IF NOT EXISTS "DP_IDENTITY_PROVIDER" (
    "ORG_ID" VARCHAR(256) NOT NULL,
    "NAME" VARCHAR(256) NOT NULL,
    "ISSUER" VARCHAR(256) NOT NULL,
    "AUTHORIZATION_URL" VARCHAR(256) NOT NULL,
    "TOKEN_URL" VARCHAR(256) NOT NULL,
    "USER_INFOR_URL" VARCHAR(256),
    "CLIENT_ID" VARCHAR(256) NOT NULL,
    "CALLBACK_URL" VARCHAR(256) NOT NULL,
    "SCOPE" VARCHAR(256) NOT NULL,
    "SIGNUP_URL" VARCHAR(256),
    "LOGOUT_URL" VARCHAR(256) NOT NULL,
    "LOGOUT_REDIRECT_URL" VARCHAR(256) NOT NULL,
    "JWKS_URL" VARCHAR(256),
    "CERTIFICATE" VARCHAR(5000),
    PRIMARY KEY ("ORG_ID"),
    FOREIGN KEY ("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE
);

-- Create DP_API_METADATA table
CREATE TABLE "DP_API_METADATA" (
    "API_ID" VARCHAR(256) NOT NULL,
    "REFERENCE_ID" VARCHAR(256),
    "ORG_ID" VARCHAR(256) NOT NULL,
    "API_NAME" VARCHAR(256) NOT NULL,
    "STATUS" VARCHAR(256) NOT NULL,
    "API_HANDLE" VARCHAR(256) NOT NULL,
    "API_DESCRIPTION" VARCHAR(4096) NOT NULL,
    "API_VERSION" VARCHAR(256) NOT NULL,
    "API_TYPE" VARCHAR(256) NOT NULL,
    "VISIBILITY" VARCHAR(256) NOT NULL,
    "VISIBLE_GROUPS" VARCHAR(256),
    "TECHNICAL_OWNER" VARCHAR(256),
    "BUSINESS_OWNER" VARCHAR(256),
    "TECHNICAL_OWNER_EMAIL" VARCHAR(256),
    "BUSINESS_OWNER_EMAIL" VARCHAR(256),
    "PRODUCTION_URL" VARCHAR(256),
    "SANDBOX_URL" VARCHAR(256),
    "METADATA_SEARCH" JSON,
    "PROVIDER" VARCHAR(256),
    "TAGS" VARCHAR(256),
    FOREIGN KEY ("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE,
    UNIQUE ("ORG_ID", "API_NAME", "API_VERSION"),
    PRIMARY KEY ("API_ID")
);

CREATE TABLE "DP_API_LABELS" (
    "ID" VARCHAR(256) NOT NULL,
    "LABEL_ID" VARCHAR(256) NOT NULL,
    "API_ID" VARCHAR(256) NOT NULL,
    "ORG_ID" VARCHAR(256) NOT NULL,
    UNIQUE ("LABEL_ID", "API_ID", "ORG_ID"),
    FOREIGN KEY("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE,
    FOREIGN KEY("LABEL_ID") REFERENCES "DP_LABELS"("LABEL_ID") ON DELETE CASCADE,
    FOREIGN KEY("API_ID") REFERENCES "DP_API_METADATA"("API_ID") ON DELETE CASCADE,
    PRIMARY KEY("ID")
);

-- Create DP_API_CONTENT table
CREATE TABLE "DP_API_CONTENT" (
    "API_FILE" BYTEA,
    "FILE_NAME" VARCHAR(256) NOT NULL,
    "TYPE" VARCHAR(256) NOT NULL,
    "API_ID" VARCHAR(256) NOT NULL,
    PRIMARY KEY ("API_ID", "FILE_NAME", "TYPE"),
    FOREIGN KEY ("API_ID") REFERENCES "DP_API_METADATA"("API_ID") ON DELETE CASCADE
);

-- Create DP_API_IMAGEDATA table
CREATE TABLE "DP_API_IMAGEDATA" (
    "IMAGE_NAME" VARCHAR(256) NOT NULL,
    "IMAGE_TAG" VARCHAR(256) NOT NULL,
    "API_ID" VARCHAR(256) NOT NULL,
    PRIMARY KEY ("API_ID", "IMAGE_NAME", "IMAGE_TAG"),
    FOREIGN KEY ("API_ID") REFERENCES "DP_API_METADATA"("API_ID") ON DELETE CASCADE
);

-- Create DP_SUBSCRIPTION_POLICY table
CREATE TABLE "DP_SUBSCRIPTION_POLICY" (
    "ORG_ID" VARCHAR(256) NOT NULL,
    "POLICY_ID" VARCHAR(256) NOT NULL,
    "POLICY_NAME" VARCHAR(256) NOT NULL,
    "DISPLAY_NAME" VARCHAR(256) NOT NULL,
    "BILLING_PLAN" VARCHAR(256) NOT NULL,
    "DESCRIPTION" VARCHAR(256),
    "REQUEST_COUNT" VARCHAR(256),
    PRIMARY KEY ("POLICY_ID"),
    FOREIGN KEY ("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE
);

-- Create DP_API_SUBSCRIPTION_POLICY table
CREATE TABLE "DP_API_SUBSCRIPTION_POLICY" (
    "POLICY_ID" VARCHAR(256) NOT NULL,
    "API_ID" VARCHAR(256) NOT NULL,
    PRIMARY KEY ("API_ID", "POLICY_ID"),
    FOREIGN KEY ("API_ID") REFERENCES "DP_API_METADATA"("API_ID") ON DELETE CASCADE,
    FOREIGN KEY ("POLICY_ID") REFERENCES "DP_SUBSCRIPTION_POLICY"("POLICY_ID") ON DELETE CASCADE
);

CREATE TABLE "DP_APPLICATION" (
    "APP_ID" VARCHAR(256) NOT NULL,
    "ORG_ID" VARCHAR(256) NOT NULL,
    "CREATED_BY" VARCHAR(256) NOT NULL,
    "NAME" VARCHAR(256) NOT NULL,
    "DESCRIPTION" VARCHAR(256),
    "TYPE" VARCHAR(256) NOT NULL,
    PRIMARY KEY ("APP_ID"),
    FOREIGN KEY ("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE
);

CREATE TABLE "DP_API_SUBSCRIPTION" (
    "SUB_ID" VARCHAR(256) NOT NULL,
    "APP_ID" VARCHAR(256) NOT NULL,
    "ORG_ID" VARCHAR(256) NOT NULL,
    "API_ID" VARCHAR(256) NOT NULL,
    "POLICY_ID" VARCHAR(256) NOT NULL,
    PRIMARY KEY ("SUB_ID"),
    UNIQUE ("APP_ID", "ORG_ID", "API_ID", "POLICY_ID"),
    FOREIGN KEY ("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE,
    FOREIGN KEY ("APP_ID") REFERENCES "DP_APPLICATION"("APP_ID") ON DELETE CASCADE
);

CREATE TABLE "DP_APP_KEY_MAPPING" (
    "MAPPING_ID" VARCHAR(256) NOT NULL,
    "APP_ID" VARCHAR(256) NOT NULL,
    "ORG_ID" VARCHAR(256) NOT NULL,
    "CP_APP_REF" VARCHAR(256) NOT NULL,
    "API_REF_ID" VARCHAR(256),
    "SUBSCRIPTION_REF_ID" VARCHAR(256),
    "SHARED_TOKEN" BOOLEAN NOT NULL,
    "TOKEN_TYPE" VARCHAR(256) NOT NULL,
    PRIMARY KEY ("MAPPING_ID"),
    FOREIGN KEY ("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE,
    FOREIGN KEY ("APP_ID") REFERENCES "DP_APPLICATION"("APP_ID") ON DELETE CASCADE
);

-- Create DP_SDK_JOB table
CREATE TABLE "DP_SDK_JOB" (
    "JOB_ID" VARCHAR(256) NOT NULL,
    "ORG_ID" VARCHAR(256) NOT NULL,
    "APP_ID" VARCHAR(256) NOT NULL,
    "JOB_STATUS" VARCHAR(20) NOT NULL DEFAULT 'PENDING',
    "PROGRESS" INTEGER NOT NULL DEFAULT 0 CHECK ("PROGRESS" >= 0 AND "PROGRESS" <= 100),
    "CURRENT_STEP" VARCHAR(256),
    "ERROR_MESSAGE" VARCHAR(256),
    "CREATED_AT" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    "UPDATED_AT" TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY ("JOB_ID"),
    FOREIGN KEY ("ORG_ID") REFERENCES "DP_ORGANIZATION"("ORG_ID") ON DELETE CASCADE,
    FOREIGN KEY ("APP_ID") REFERENCES "DP_APPLICATION"("APP_ID") ON DELETE CASCADE
);

CREATE TABLE "session" (
  "sid" varchar NOT NULL COLLATE "default",
  "sess" json NOT NULL,
  "expire" timestamp(6) NOT NULL
)
WITH (OIDS=FALSE);

ALTER TABLE "session" ADD CONSTRAINT "session_pkey" PRIMARY KEY ("sid") NOT DEFERRABLE INITIALLY IMMEDIATE;

CREATE INDEX idx_metadata_api_id ON "DP_API_METADATA"("API_ID");
CREATE INDEX idx_content_api_id ON "DP_API_CONTENT"("API_ID");
CREATE INDEX idx_content_file_name ON "DP_API_CONTENT"("FILE_NAME");
CREATE INDEX idx_subscription_policy_api_id ON "DP_API_SUBSCRIPTION_POLICY"("API_ID");
CREATE INDEX idx_metadata_org_id ON "DP_API_METADATA"("ORG_ID");

CREATE INDEX idx_metadata_search ON "DP_API_METADATA" USING gin(to_tsvector('english', "METADATA_SEARCH"));
CREATE INDEX "IDX_session_expire" ON "session" ("expire");
